{
  "name": "api-client-generator",
  "version": "5.0.0-beta.6",
  "description": "Angular REST API client generator from Swagger YAML or JSON file with camel case settings",
  "homepage": "https://github.com/flowup/api-client-generator/blob/master/README.md",
  "main": "./dist/main.js",
  "author": {
    "name": "FlowUp",
    "email": "hello@flowup.cz",
    "url": "https://flowup.cz"
  },
  "bin": {
    "api-client-generator": "./dist/main.js"
  },
  "bugs": {
    "url": "https://github.com/flowup/api-client-generator/issues"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:flowup/api-client-generator.git"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "keywords": [
    "swagger",
    "open-api",
    "rest",
    "angular",
    "ngx",
    "scaffolding",
    "webapi",
    "api",
    "apiclient",
    "generator",
    "camelCase",
    "HTTP",
    "HTTPClient"
  ],
  "engines": {
    "node": ">=12.0.0",
    "yarn": ">=1.20.0"
  },
  "license": "MIT",
  "scripts": {
    "generate": "node ./dist/main.js",
    "build": "npm run lint && rimraf dist && tsc --build src",
    "lint": "tslint -p src/tsconfig.json -c tslint.json src/**/*.ts",
    "gen": "ts-node --files ./src/main.ts",
    "gen:all": "npm run gen-custom && npm run gen-custom-without-guards && npm run gen-esquare && npm run gen-gcloud-firestore && npm run gen-github && npm run gen-filtered-api && npm run gen-pet-store && npm run gen-with-all-tags",
    "gen:all:parallel": "concurrently --kill-others-on-fail \"npm:gen-*\"",
    "gen-custom": "rimraf ./tests/custom/api && npm run gen -- -s ./tests/custom/swagger.yaml -o ./tests/custom/api",
    "gen-custom-without-guards": "rimraf ./tests/custom-without-guards/api && npm run gen -- -s ./tests/custom/swagger.yaml -o ./tests/custom-without-guards/api -g",
    "gen-esquare": "rimraf ./tests/esquare/api && npm run gen -- -s ./tests/esquare/swagger.yaml -o ./tests/esquare/api",
    "gen-gcloud-firestore": "rimraf ./tests/gcloud-firestore/api && npm run gen -- -s ./tests/gcloud-firestore/swagger.yaml -o ./tests/gcloud-firestore/api",
    "gen-github": "rimraf ./tests/github/api && npm run gen -- -s ./tests/github/swagger.yaml -o ./tests/github/api -t all",
    "gen-filtered-api": "rimraf ./tests/filtered-api/api && npm run gen -- -s ./tests/filtered-api/swagger.json -o ./tests/filtered-api/api -t DummySelector,Project,NonExistingTag -m",
    "gen-pet-store": "rimraf ./tests/pet-store/api && npm run gen -- --verbose -s ./tests/pet-store/swagger.yaml -o ./tests/pet-store/api",
    "gen-with-all-tags": "rimraf ./tests/with-all-tags/api && npm run gen -- -s ./tests/with-all-tags/swagger.json -o ./tests/with-all-tags/api -t all",
    "release": "npm run tests && npm run build && standard-version --tag-prefix=''",
    "test": "jest",
    "test--showConfig ": "jest --showConfig ",
    "intg-tests:gen-all-tags": "rimraf tests/test-angular-project/src/api-all-tags && npm run gen -- -s tests/test-angular-project/swagger.yaml -o tests/test-angular-project/src/api-all-tags -t all",
    "intg-tests:gen-no-tag": "rimraf tests/test-angular-project/src/api-no-tags && npm run gen -- -s tests/test-angular-project/swagger.yaml -o tests/test-angular-project/src/api-no-tags",
    "intg-tests:clear-gen": "rimraf tests/test-angular-project/src/api-no-tags && rimraf tests/test-angular-project/src/api-all-tags",
    "intg-tests:run-tests": "cd tests/test-angular-project && npm run test",
    "intg-tests:run-build": "cd tests/test-angular-project && npm run build",
    "intg-tests": "concurrently --kill-others-on-fail \"npm:intg-tests:gen-*\" && concurrently --kill-others-on-fail \"npm:intg-tests:run-*\" && npm run intg-tests:clear-gen",
    "tests": "npm run test && npm run intg-tests",
    "prettier": "prettier --write \"**/*.{js,json,yaml,css,scss,md,ts,html,component.html}\"",
    "dev:install": "npm ci --silent && cd tests/test-angular-project && npm ci --silent"
  },
  "dependencies": {
    "handlebars": "^4.7.7",
    "optimist": "^0.6.1",
    "swagger-parser": "^10.0.3",
    "which": "^2.0.2"
  },
  "devDependencies": {
    "@types/jest": "^27.4.1",
    "@types/node": "^14.14.14",
    "@types/optimist": "^0.0.30",
    "@types/rimraf": "^3.0.2",
    "@types/which": "^2.0.1",
    "concurrently": "^7.1.0",
    "dir-compare": "^4.0.0",
    "husky": "^4.3.6",
    "jest": "^27.5.1",
    "jest-preset-typescript": "^1.2.0",
    "jest-sonar-reporter": "^2.0.0",
    "openapi-types": "^7.0.1",
    "prettier": "^2.6.2",
    "pretty-quick": "^3.1.3",
    "rimraf": "^3.0.2",
    "standard-version": "^9.3.2",
    "ts-jest": "^27.1.4",
    "ts-node": "^10.7.0",
    "tslint": "^6.1.3",
    "tslint-immutable": "^6.0.1",
    "typescript": "^4.6.3"
  },
  "optionalDependencies": {
    "@angular/common": "^11.0.0",
    "@angular/core": "^11.0.0",
    "rxjs": "^6.0.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged",
      "pre-push": "npm run lint"
    }
  },
  "jest": {
    "preset": "jest-preset-typescript",
    "setupFilesAfterEnv": [
      "<rootDir>/setupJest.ts",
      "<rootDir>/src/typings.d.ts"
    ],
    "testRegex": "^\\/src\\/.*|\\.tests?\\.ts$",
    "modulePaths": [
      "<rootDir>/node_modules",
      "<rootDir>"
    ],
    "testResultsProcessor": "jest-sonar-reporter"
  }
}
